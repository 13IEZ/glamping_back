{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Glamping API"
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "tags": [
    {
      "name": "user"
    },
    {
      "name": "location"
    },
    {
      "name": "module"
    },
    {
      "name": "review"
    }
  ],
  "components": {
    "schemas": {
      "Module": {
        "type": "object",
        "required": ["title", "type", "image", "roominess", "year", "description"],
        "properties": {
          "_id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "roominess": {
            "type": "integer"
          },
          "year": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "number": {
            "type": "number"
          },
          "series": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "rent": {
            "type": "number"
          },
          "status": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "factory": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Location": {
        "type": "object",
        "required": ["title", "square", "image", "rent", "description", "status", "electricity", "water", "road"],
        "properties": {
          "_id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "square": {
            "type": "number"
          },
          "image": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rent": {
            "type": "number"
          },
          "status": {
            "type": "boolean"
          },
          "electricity": {
            "type": "boolean"
          },
          "water": {
            "type": "boolean"
          },
          "road": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authentication",
        "in": "header"
      }  
    }
  },
  "security": [{
    "bearerAuth": []
  }],
  "paths": {
    "/modules": {
      "get": {
        "tags": ["module"],
        "summary": "Get all modules",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["module"],
        "summary": "Post new module",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/modules/last": {
      "get": {
        "tags": ["module"],
        "summary": "Get last 4 modules",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/modules/{id}": {
      "get": {
        "tags": ["module"],
        "summary": "Get module by ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of module that we want to find",
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "tags": ["module"],
        "summary": "Put module by ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of module that we want to update",
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { 
                    "description": "Updated title of the module",
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "roominess": {
                    "type": "number"
                  },
                  "year": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "number": {
                    "type": "number"
                  },
                  "series": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "rent": {
                    "type": "number"
                  },
                  "status": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["module"],
        "summary": "Delete module by ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of module that we want to delete",
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/modules/published/{id}": {
      "put": {
        "tags": ["module"],
        "summary": "Published module by ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of module that we want to publish",
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "published": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/locations": {
      "get": {
        "tags": ["location"],
        "summary": "Get all locations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["location"],
        "summary": "Post new location",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/locations/last": {
      "get": {
        "tags": ["location"],
        "summary": "Get last 4 locations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "tags": ["location"],
        "summary": "Get location by ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of location that we want to find",
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "put": {
        "tags": ["location"],
        "summary": "Put location by ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of location that we want to update",
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { 
                    "description": "Updated title of the location",
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "square": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "rent": {
                    "type": "number"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "electricity": {
                    "type": "boolean"
                  },
                  "water": {
                    "type": "boolean"
                  },
                  "road": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["location"],
        "summary": "Delete location by ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of location that we want to delete",
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/locations/published/{id}": {
      "put": {
        "tags": ["location"],
        "summary": "Published location by ID",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of location that we want to publish",
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "published": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}

